<!DOCTYPE html>
<html lang="en">

<head>
  <title><%= _client.user.username %></title>
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

  <link rel="stylesheet" href="../public/css/commands.min.css" />
  <link rel="icon" href="<%= _client.user.displayAvatarURL({ format: 'png', size: 4096 }); %>" />
</head>

<body>
  <%- include('./partials/header') %>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

  <div class="d-flex justify-content-center command_head">
    <h1 class="text-center"> <%= i18n.__mf('website.commands') %> </h1>
  </div>

  <div class="container px-lg-5" id="command_head">
    <div class="row">
      <div class="col-sm-3" id="category">
        <div class="list-group" id="myList" role="tablist">
          <% for(const [i, category] of [..._client.categories].filter(c => c !== 'auto').entries()) { %>
            <a class="list-group-item list-group-item-action <%= i === 0 ? 'active' : ''%> <%= category === 'nsfw' ? 'nsfw' : '' %>" data-bs-toggle="list" href="#<%= category %>" role="tab" aria-controls="<%= category %>" <%# category === 'nsfw' ? 'style="display: none;"' : '' %>><%= upperFirstButAcceptEmojis(beautifyCategories(category)); %></a>
          <% }%>
        </div>
      </div>
      <div class="col-sm-9">
        <div class="tab-content">
          <% const categories = [..._client.categories].filter(c => c !== 'auto') %>
          <% for(const [i, category] of categories.entries()) { %>
          <% const _commands = _client.mappedCategories.get(category)[1]; %>
          <% let j = 0 %>
          <div class="tab-pane fade show <%= i === 0 ? 'active' : '' %>" id="<%= category %>" role="tabpanel" aria-labelledby="list-home-list">
            <div class="accordion" id="acc_<%= category %>">
              <% _commands.each(command => { %>
              <% j++ %>
              <div class="accordion-item">
                <h2 class="accordion-header" id="h_<%= command.help.name %>">
                  <button class="accordion-button <%= j ===0 ? '' : 'collapsed' %>" type="button" data-bs-toggle="collapse" data-bs-target="#c_<%= command.help.name %>" aria-expanded="<%= i==0 ? 'true' : 'false' %>" aria-controls="<%= command.help.name %>">
                    <%= command.help.name %>
                  </button>
                </h2>
                <div id="c_<%= command.help.name %>" class="accordion-collapse collapse <%= j===0 ? 'show' : ''%>" aria-labelledby="h_<%= command.help.name %>" data-bs-parent="#acc_<%= category %>">
                  <div class="accordion-body">
                    <code>Description: </code> <%- i18n.__mf(`${command.help.name}.description`) !== `${command.help.name}.description` ? i18n.__mf(`${command.help.name}.description`, { prefix: _client.prefix }).replace(/`(.+?)`/g, '<code>$1</code>') : command.help.description.replace(/`(.+?)`/g, '<code>$1</code>') || i18n.__mf('help.no_desc') %>
                    <br />
                    <code><%- i18n.__mf('help.bot_permissions') %>: </code> <%- translatePermissions(command.config.clientPermissions, i18n.getLocale()).map(p => `<kbd>${p}</kbd>`).join(' ') %><br />
                    <code><%- i18n.__n('help.alias', command.config.aliases.length) %>: </code> <%- command.config.aliases.length !== 0 ? command.config.aliases.map(a => `<small class="text-muted">[${_client.prefix}${a}]</small>`).join(' ') : i18n.__mf('help.none_alias') %><br />
                    <code><%- i18n.__mf('help.usage') %>: </code> <%= command.help.utilisation.replace(/{prefix}/g, _client.prefix) %>
                  </div>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>


  <script src="../public/lang.js"></script>


  <label class="toggle-nsfw">
    <span class="ON-OFF">Show NSFW commands (OFF)</span>
    <input type="checkbox" />
    <span class="slider round"></span>
  </label>
  <script>
    const checkbox = document.querySelector('.toggle-nsfw input');
    const onOff = checkbox.parentNode.querySelector('.ON-OFF');
    const n = document.getElementsByClassName('nsfw')[0];
    if(checkbox.checked) {
      localStorage.setItem('nsfw', 'true');
    } else {
      localStorage.setItem('nsfw', 'false');
    }
    if(localStorage.getItem('nsfw') === 'true') {
      checkbox.checked = true;
      onOff.innerText = 'Show NSFW commands (ON)';
      n.setAttribute('hidden', 'true');
    } else {
      checkbox.checked = false;
      onOff.innerText = 'Show NSFW commands (OFF)';
      n.removeAttribute('hidden');
    }
    if(checkbox.checked) {
      n.removeAttribute('hidden');
    } else {
      n.setAttribute('hidden', 'true');
    }
    checkbox.addEventListener('click', () => {
      onOff.textContent = checkbox.checked ? onOff.textContent.replace('OFF', 'ON') : onOff.textContent.replace('ON', 'OFF');
      if (checkbox.checked) {
        localStorage.setItem('nsfw', 'true');
        nsfw = 'true';
      } else {
        localStorage.setItem('nsfw', 'false');
        nsfw = 'false';
      }
      if(checkbox.checked) {
        n.removeAttribute('hidden');
      } else {
        n.setAttribute('hidden', 'true');
      }
    });
  </script>
  <%- include('partials/footer') %>
</body>

</html>